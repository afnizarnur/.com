{
    "version": 3,
    "sources": [
        "webpack:///./src/components/Footer/Footer.js",
        "webpack:///./src/components/Layouts/Full.js",
        "webpack:///./src/templates/Tags.js",
        "webpack:///./src/utils/styles.js",
        "webpack:///./src/components/Footer/Mini.js"
    ],
    "names": [
        "ButtonPrimary",
        "styled",
        "Link",
        "theme",
        "colors",
        "gray",
        "black",
        "fontSizes",
        "white",
        "Footer",
        "props",
        "Full",
        "paddingTop",
        "paddingBottom",
        "bg",
        "Default",
        "fontSize",
        "mt",
        "mb",
        "href",
        "Mini",
        "children",
        "flex",
        "color",
        "flexDirection",
        "mx",
        "PostTitle",
        "as",
        "lineHeight",
        "ViewLink",
        "themeHover",
        "Tags",
        "pageContext",
        "data",
        "title",
        "useSiteMetadata",
        "tag",
        "allMarkdownRemark",
        "edges",
        "totalCount",
        "tagHeader",
        "imageStyle",
        "borderRadius",
        "radii",
        "property",
        "content",
        "name",
        "id",
        "justifyContent",
        "flexWrap",
        "map",
        "index",
        "node",
        "slug",
        "fields",
        "key",
        "width",
        "length",
        "frontmatter",
        "featuredimage",
        "to",
        "style",
        "fluid",
        "childImageSharp",
        "category",
        "description",
        "date",
        "css",
        "themeUnderline",
        "alignItems",
        "paddingRight",
        "className",
        "aria-label",
        "mr",
        "src",
        "alt"
    ],
    "mappings": "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",
    "file": "component---src-templates-tags-js-b03ac74e26bedf80352a.js",
    "sourcesContent": [
        "import React from \"react\"\nimport { Box, Flex, Link } from \"rebass\"\nimport { Title2, Paragraph } from \"../Typography\"\nimport DefaultLayout from \"../Layouts/Default\"\nimport FullLayout from \"../Layouts/Full\"\nimport Mini from \"./Mini\"\nimport styled from \"styled-components\"\n\nconst ButtonPrimary = styled(Link)`\n  background: ${({ theme }) => theme.colors.gray[0]};\n  color: ${({ theme }) => theme.colors.black};\n  border-radius: 4px;\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  padding: 0.75rem 1rem;\n  font-weight: bold;\n  &:hover {\n    background: ${({ theme }) => theme.colors.black};\n    color: ${({ theme }) => theme.colors.white};\n    cursor: \"pointer\";\n    transition: all ease 0.2s;\n  }\n`\n\nconst Footer = ({ ...props }) => {\n  return (\n    <FullLayout>\n      <Flex\n        paddingTop={[6, 7, 7]}\n        paddingBottom={[6, 6, \"5.1875rem\"]}\n        bg=\"white\"\n        {...props}\n      >\n        <DefaultLayout>\n          <Title2>\n            I'm always down for a coffee, feel free to get in touch!\n          </Title2>\n          <Paragraph fontSize={[2, 3]} mt={[4, 5]} mb={[5, 5, 12]}>\n            Letâ€™s talk about anything from design, accessibility, front-end\n            development, prototyping, and technology.\n          </Paragraph>\n          <Box fontSize={2}>\n            <ButtonPrimary href=\"mailto:afnizarhilmi@gmail.com\">\n              Contact\n            </ButtonPrimary>\n          </Box>\n\n          <Mini mt={[6, 15, 15]} />\n        </DefaultLayout>\n      </Flex>\n    </FullLayout>\n  )\n}\n\nexport default Footer\n",
        "import React from \"react\"\nimport { Flex, Box } from \"rebass\"\n\nexport default ({ children }) => (\n  <Box\n    flex=\"1\"\n    color=\"black\"\n    bg=\"white\"\n    css=\"padding: 0!important; margin: 0!important; max-width: 100%\"\n  >\n    <Flex flexDirection=\"column\" mx=\"auto\" css=\"height: 100%\">\n      {children}\n    </Flex>\n  </Box>\n)\n",
        "import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Img from \"gatsby-image\"\nimport { Link, graphql } from \"gatsby\"\nimport Navigation from \"../components/Navigation\"\nimport { Box, Heading, Flex } from \"rebass\"\nimport Header from \"../components/Header\"\nimport DefaultLayout from \"../components/Layouts/Default\"\nimport { Title3, Paragraph } from \"../components/Typography\"\nimport styled from \"styled-components\"\nimport theme from \"../layouts/theme\"\nimport { themeHover } from \"../utils/styles\"\nimport Footer from \"../components/Footer\"\nimport Helmet from \"react-helmet\"\nimport { useSiteMetadata } from \"../utils/hooks\"\n\nconst PostTitle = ({ children }) => (\n  <Heading\n    as=\"h3\"\n    fontSize={[3]}\n    lineHeight=\"title\"\n    color={theme.colors.black}\n    mb={3}\n    css=\"letter-spacing: -0.2px;\"\n  >\n    {children}\n  </Heading>\n)\n\nconst ViewLink = styled(Link)`\n  text-decoration: underline;\n  ${themeHover};\n`\n\nPostTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nconst Tags = ({ pageContext, data }) => {\n  const { title } = useSiteMetadata()\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  const imageStyle = {\n    borderRadius: theme.radii[2],\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Tags \"{tag}\" | {title}\n        </title>\n        <meta property=\"og:site_name\" content={title} />\n        <meta property=\"og:title\" content={\"Tags \" + tag + \" | \" + title} />\n        <meta name=\"twitter:title\" content={\"Tags \" + tag + \" | \" + title} />\n      </Helmet>\n      <Box>\n        <DefaultLayout>\n          <Navigation />\n        </DefaultLayout>\n      </Box>\n      <Box as=\"main\" id=\"main-content\">\n        <DefaultLayout>\n          <Header>\n            <Title3 mt={[6, 9]} mb={[6, 14]}>\n              {tagHeader}\n            </Title3>\n          </Header>\n\n          <main>\n            <Flex\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              flexWrap=\"wrap\"\n            >\n              {edges.map(({ node }, index) => {\n                const { slug } = node.fields\n                return (\n                  <Box\n                    key={slug}\n                    width={[1, 1 / 2.05, 1 / 2.05]}\n                    {...(index + 1 === edges.length ? {} : { mb: [12, 6] })}\n                  >\n                    {node.frontmatter.featuredimage ? (\n                      <Box mb={[4, 5]}>\n                        <Link to={slug}>\n                          <Img\n                            style={imageStyle}\n                            fluid={\n                              node.frontmatter.featuredimage.childImageSharp\n                                .fluid\n                            }\n                          />\n                        </Link>\n                      </Box>\n                    ) : null}\n                    <Paragraph mb={4}>{node.frontmatter.category}</Paragraph>\n                    <PostTitle>\n                      <ViewLink to={slug} css={themeHover}>\n                        {node.frontmatter.title}\n                      </ViewLink>\n                    </PostTitle>\n\n                    <Paragraph fontSize={[1, 2]} lineHeight=\"copy\" mb={4}>\n                      {node.frontmatter.description}\n                    </Paragraph>\n\n                    <Paragraph fontSize={[1, 2]}>\n                      Published on {node.frontmatter.date}\n                    </Paragraph>\n                  </Box>\n                )\n              })}\n            </Flex>\n          </main>\n        </DefaultLayout>\n        <Box mt={14} css=\"border-top: 1px solid #d8d8d8\">\n          <Footer />\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            featuredimage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            description\n            date: date(formatString: \"MMMM Do, YYYY\")\n            category\n          }\n        }\n      }\n    }\n  }\n`\n",
        "import { css } from \"styled-components\"\n\nconst themeHover = css`\n  color: inherit;\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst themeUnderline = css`\n  text-decoration: underline;\n  text-decoration-color: ${({ theme }) => theme.colors.black};\n`\n\nexport { themeHover, themeUnderline }\n",
        "import React from \"react\"\nimport styled from \"styled-components\"\nimport theme from \"../../layouts/theme\"\nimport { Box, Link, Flex, Image } from \"rebass\"\nimport { Paragraph } from \"../../components/Typography\"\nimport { themeHover } from \"../../utils/styles\"\n\nconst ViewLink = styled(Link)`\n  text-decoration: underline;\n  letter-spacing: -0.2px;\n\n  .active & {\n    border-color: ${({ theme }) => theme.colors.black};\n  }\n\n  ${themeHover};\n`\n\nconst Mini = ({ ...props }) => {\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      bg=\"white\"\n      {...props}\n    >\n      <Box>\n        <Paragraph fontSize={2} color={theme.colors.gray[1]} paddingRight={4}>\n          Follow me for more thoughts and updates on{\" \"}\n          <ViewLink href=\"https://twitter.com/afnizarnur\">Twitter</ViewLink>,{\" \"}\n          <ViewLink href=\"https://dribbble.com/afnizarnur\">Dribbble</ViewLink>,{\" \"}\n          <ViewLink href=\"https://behance.net/afnizarnur\">Behance</ViewLink>,\n          and{\" \"}\n          <ViewLink href=\"https://www.linkedin.com/in/afnizarnur/\">\n            Linkedin\n          </ViewLink>\n          .\n        </Paragraph>\n      </Box>\n      <Box>\n        <Link\n          css=\"width: 14px; height: 14px; display: block; :focus { outline: none; }\"\n          className=\"scroll\"\n          aria-label=\"Scroll to Top\"\n          href=\"#top\"\n        >\n          <Image\n            className=\"scrollImage\"\n            mr={[3, 0]}\n            css=\"max-width: 1000%; width:14px; height: 14px\"\n            src={\"./assets/arrow-up.svg\"}\n            alt=\"Scroll to Top\"\n          />\n        </Link>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default Mini\n"
    ],
    "sourceRoot": ""
}
