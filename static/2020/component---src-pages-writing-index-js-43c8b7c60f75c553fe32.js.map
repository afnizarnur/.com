{"version":3,"sources":["webpack:///./src/pages/writing/index.js","webpack:///./src/components/Footer/Footer.js","webpack:///./src/components/Layouts/Full.js","webpack:///./src/utils/styles.js","webpack:///./src/components/Footer/Mini.js"],"names":["PostTitle","children","as","fontSize","lineHeight","color","theme","colors","black","mb","ViewLink","styled","Link","themeHover","BlogPage","title","useSiteMetadata","posts","allMarkdownRemark","edges","imageStyle","borderRadius","radii","property","content","name","id","mt","maxWidth","flexDirection","justifyContent","flexWrap","map","index","node","fields","frontmatter","key","slug","width","length","featuredimage","to","style","fluid","childImageSharp","category","description","date","ButtonPrimary","gray","fontSizes","white","Footer","props","Full","paddingTop","paddingBottom","bg","Default","href","Mini","flex","mx","css","themeUnderline","alignItems","paddingRight","className","aria-label","mr","src","alt"],"mappings":"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","file":"component---src-pages-writing-index-js-43c8b7c60f75c553fe32.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport Helmet from \"react-helmet\"\nimport { Box, Flex, Heading } from \"rebass\"\nimport Header from \"../../components/Header\"\nimport { Title, Paragraph } from \"../../components/Typography\"\nimport { useSiteMetadata } from \"../../utils/hooks\"\nimport { themeHover } from \"../../utils/styles\"\nimport DefaultLayout from \"../../components/Layouts/Default\"\nimport Navigation from \"../../components/Navigation\"\nimport Footer from \"../../components/Footer\"\nimport theme from \"../../layouts/theme\"\nimport Img from \"gatsby-image\"\nimport styled from \"styled-components\"\n\nconst PostTitle = ({ children }) => (\n  <Heading\n    as=\"h3\"\n    fontSize={[3]}\n    lineHeight=\"title\"\n    color={theme.colors.black}\n    mb={3}\n    css=\"letter-spacing: -0.2px;\"\n  >\n    {children}\n  </Heading>\n)\n\nconst ViewLink = styled(Link)`\n  text-decoration: underline;\n  ${themeHover};\n`\n\nPostTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nconst BlogPage = () => {\n  const { title } = useSiteMetadata()\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n        edges {\n          node {\n            frontmatter {\n              title\n              featuredimage {\n                childImageSharp {\n                  fluid(maxWidth: 800) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n              description\n              date: date(formatString: \"MMMM Do, YYYY\")\n              category\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = data.allMarkdownRemark.edges\n\n  const imageStyle = {\n    borderRadius: theme.radii[2],\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Writing | {title}</title>\n        <meta property=\"og:site_name\" content={title} />\n        <meta property=\"og:title\" content={\"Writing | \" + title} />\n        <meta name=\"twitter:title\" content={\"Writing | \" + title} />\n      </Helmet>\n\n      <Box>\n        <DefaultLayout>\n          <Navigation />\n        </DefaultLayout>\n        <Box as=\"main\" id=\"main-content\">\n          <DefaultLayout>\n            <Header>\n              <Title\n                css=\"animation: fadeInBottom 1s 0.5s cubic-bezier(0.19, 1, 0.22, 1) backwards;\"\n                mt={[6, 9]}\n              >\n                Writing\n              </Title>\n\n              <Paragraph\n                maxWidth=\"90%\"\n                fontSize={[2, 3]}\n                mt={[4, 5]}\n                mb={[10, 14]}\n                css=\"animation: fadeInBottom 1s 0.75s cubic-bezier(0.19, 1, 0.22, 1) backwards;\"\n              >\n                I occasionally write about what work Iâ€™ve been doing and share\n                my thoughts on anything from design to personal life.\n              </Paragraph>\n            </Header>\n\n            <main>\n              <Flex\n                flexDirection=\"row\"\n                justifyContent=\"space-between\"\n                flexWrap=\"wrap\"\n              >\n                {posts.map(({ node }, index) => {\n                  const { fields, frontmatter } = node\n\n                  return (\n                    <Box\n                      key={fields.slug}\n                      width={[1, 1 / 2.05, 1 / 2.05]}\n                      {...(index + 1 === posts.length ? {} : { mb: [12, 6] })}\n                    >\n                      {frontmatter.featuredimage ? (\n                        <Box mb={[4, 5]}>\n                          <Link to={fields.slug}>\n                            <Img\n                              style={imageStyle}\n                              fluid={\n                                frontmatter.featuredimage.childImageSharp.fluid\n                              }\n                            />\n                          </Link>\n                        </Box>\n                      ) : null}\n                      <Paragraph mb={4}>{frontmatter.category}</Paragraph>\n                      <PostTitle>\n                        <ViewLink to={fields.slug} css={themeHover}>\n                          {frontmatter.title}\n                        </ViewLink>\n                      </PostTitle>\n\n                      <Paragraph fontSize={[1, 2]} lineHeight=\"copy\" mb={4}>\n                        {frontmatter.description}\n                      </Paragraph>\n\n                      <Paragraph fontSize={[1, 2]}>\n                        Published on {frontmatter.date}\n                      </Paragraph>\n                    </Box>\n                  )\n                })}\n              </Flex>\n            </main>\n          </DefaultLayout>\n          <Box mt={14} css=\"border-top: 1px solid #d8d8d8\">\n            <Footer />\n          </Box>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default BlogPage\n","import React from \"react\"\nimport { Box, Flex, Link } from \"rebass\"\nimport { Title2, Paragraph } from \"../Typography\"\nimport DefaultLayout from \"../Layouts/Default\"\nimport FullLayout from \"../Layouts/Full\"\nimport Mini from \"./Mini\"\nimport styled from \"styled-components\"\n\nconst ButtonPrimary = styled(Link)`\n  background: ${({ theme }) => theme.colors.gray[0]};\n  color: ${({ theme }) => theme.colors.black};\n  border-radius: 4px;\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  padding: 0.75rem 1rem;\n  font-weight: bold;\n  &:hover {\n    background: ${({ theme }) => theme.colors.black};\n    color: ${({ theme }) => theme.colors.white};\n    cursor: \"pointer\";\n    transition: all ease 0.2s;\n  }\n`\n\nconst Footer = ({ ...props }) => {\n  return (\n    <FullLayout>\n      <Flex\n        paddingTop={[6, 7, 7]}\n        paddingBottom={[6, 6, \"5.1875rem\"]}\n        bg=\"white\"\n        {...props}\n      >\n        <DefaultLayout>\n          <Title2>\n            I'm always down for a coffee, feel free to get in touch!\n          </Title2>\n          <Paragraph fontSize={[2, 3]} mt={[4, 5]} mb={[5, 5, 12]}>\n            Letâ€™s talk about anything from design, accessibility, front-end\n            development, prototyping, and technology.\n          </Paragraph>\n          <Box fontSize={2}>\n            <ButtonPrimary href=\"mailto:afnizarhilmi@gmail.com\">\n              Contact\n            </ButtonPrimary>\n          </Box>\n\n          <Mini mt={[6, 15, 15]} />\n        </DefaultLayout>\n      </Flex>\n    </FullLayout>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport { Flex, Box } from \"rebass\"\n\nexport default ({ children }) => (\n  <Box\n    flex=\"1\"\n    color=\"black\"\n    bg=\"white\"\n    css=\"padding: 0!important; margin: 0!important; max-width: 100%\"\n  >\n    <Flex flexDirection=\"column\" mx=\"auto\" css=\"height: 100%\">\n      {children}\n    </Flex>\n  </Box>\n)\n","import { css } from \"styled-components\"\n\nconst themeHover = css`\n  color: inherit;\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst themeUnderline = css`\n  text-decoration: underline;\n  text-decoration-color: ${({ theme }) => theme.colors.black};\n`\n\nexport { themeHover, themeUnderline }\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport theme from \"../../layouts/theme\"\nimport { Box, Link, Flex, Image } from \"rebass\"\nimport { Paragraph } from \"../../components/Typography\"\nimport { themeHover } from \"../../utils/styles\"\n\nconst ViewLink = styled(Link)`\n  text-decoration: underline;\n  letter-spacing: -0.2px;\n\n  .active & {\n    border-color: ${({ theme }) => theme.colors.black};\n  }\n\n  ${themeHover};\n`\n\nconst Mini = ({ ...props }) => {\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      bg=\"white\"\n      {...props}\n    >\n      <Box>\n        <Paragraph fontSize={2} color={theme.colors.gray[1]} paddingRight={4}>\n          Follow me for more thoughts and updates on{\" \"}\n          <ViewLink href=\"https://twitter.com/afnizarnur\">Twitter</ViewLink>,{\" \"}\n          <ViewLink href=\"https://dribbble.com/afnizarnur\">Dribbble</ViewLink>,{\" \"}\n          <ViewLink href=\"https://behance.net/afnizarnur\">Behance</ViewLink>,\n          and{\" \"}\n          <ViewLink href=\"https://www.linkedin.com/in/afnizarnur/\">\n            Linkedin\n          </ViewLink>\n          .\n        </Paragraph>\n      </Box>\n      <Box>\n        <Link\n          css=\"width: 14px; height: 14px; display: block; :focus { outline: none; }\"\n          className=\"scroll\"\n          aria-label=\"Scroll to Top\"\n          href=\"#top\"\n        >\n          <Image\n            className=\"scrollImage\"\n            mr={[3, 0]}\n            css=\"max-width: 1000%; width:14px; height: 14px\"\n            src={\"/assets/arrow-up.svg\"}\n            alt=\"Scroll to Top\"\n          />\n        </Link>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default Mini\n"],"sourceRoot":""}